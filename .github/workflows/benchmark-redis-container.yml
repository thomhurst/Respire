name: Redis Container Benchmarks

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'benchmarks/**'
      - '.github/workflows/benchmark-redis-container.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - 'benchmarks/**'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  redis-container-benchmarks:
    name: Run Redis Container Benchmarks
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        framework: [net8.0, net9.0]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build -c Release --no-restore
      
      - name: Run Redis Container Benchmarks
        run: |
          cd benchmarks/Respire.Benchmarks
          dotnet run -c Release -f ${{ matrix.framework }} -- \
            --filter "*RedisContainerBenchmarks*" \
            --exporters json markdown html \
            --artifacts ./BenchmarkDotNet.Artifacts
      
      - name: Generate GitHub Summary
        run: |
          echo "## 📊 Redis Container Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Framework: ${{ matrix.framework }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Find and parse the markdown report
          RESULTS_DIR="benchmarks/Respire.Benchmarks/BenchmarkDotNet.Artifacts/results"
          if [ -d "$RESULTS_DIR" ]; then
            for file in "$RESULTS_DIR"/*.md; do
              if [ -f "$file" ]; then
                echo "#### Benchmark Results" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
                
                # Extract key metrics from the markdown file
                cat "$file" | head -50 >> $GITHUB_STEP_SUMMARY
                
                echo "" >> $GITHUB_STEP_SUMMARY
                echo "<details>" >> $GITHUB_STEP_SUMMARY
                echo "<summary>📄 View Full Benchmark Report</summary>" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                cat "$file" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                echo "</details>" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
                
                # Add performance insights
                echo "### 🎯 Performance Insights" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
                echo "- **Framework**: ${{ matrix.framework }}" >> $GITHUB_STEP_SUMMARY
                echo "- **Runner**: ${{ runner.os }} - ${{ runner.arch }}" >> $GITHUB_STEP_SUMMARY
                echo "- **Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
                
                # Extract mean times if available
                if grep -q "Mean" "$file"; then
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "#### Key Metrics:" >> $GITHUB_STEP_SUMMARY
                  grep -E "(Method|Mean|Error|StdDev|Median|P95)" "$file" | head -20 >> $GITHUB_STEP_SUMMARY
                fi
                
                break
              fi
            done
          else
            echo "⚠️ No benchmark results found in $RESULTS_DIR" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Benchmarks powered by [BenchmarkDotNet](https://benchmarkdotnet.org/)*" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: redis-container-benchmarks-${{ matrix.framework }}
          path: benchmarks/Respire.Benchmarks/BenchmarkDotNet.Artifacts/
          retention-days: 30
      
      - name: Comment PR with results (if PR)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const artifactsDir = 'benchmarks/Respire.Benchmarks/BenchmarkDotNet.Artifacts/results';
            const files = fs.readdirSync(artifactsDir);
            const markdownFile = files.find(f => f.endsWith('.md'));
            
            if (markdownFile) {
              const content = fs.readFileSync(path.join(artifactsDir, markdownFile), 'utf8');
              
              const comment = `## Redis Container Benchmark Results (${{ matrix.framework }})
              
              ${content}
              
              <details>
              <summary>View raw benchmark output</summary>
              
              \`\`\`
              ${content}
              \`\`\`
              </details>`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }